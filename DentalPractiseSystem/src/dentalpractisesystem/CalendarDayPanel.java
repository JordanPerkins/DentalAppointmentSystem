/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dentalpractisesystem;

import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;

/**
 *
 * @author James-PowerPC
 */
public class CalendarDayPanel extends javax.swing.JPanel {
    
    private javax.swing.JFrame frame;
    
    private SimpleDateFormat dateFormat = new SimpleDateFormat("EEE dd MMMM");

    private Calendar cToday = Calendar.getInstance();
    private int timeOffset;
    
    private Calendar cDisplay = Calendar.getInstance();
    
    private Partner partner;

    /**
     * Creates new form CalendarDayPanel
     */
    public CalendarDayPanel(javax.swing.JFrame frame, int timeO, Partner partner) {
        this.frame = frame;
        this.timeOffset = timeO;
        this.partner = partner;
        
        if (timeOffset != 0)
            cDisplay.add(Calendar.DATE, timeOffset);
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectPartner = new javax.swing.JButton();
        back = new javax.swing.JButton();
        forward = new javax.swing.JButton();
        dayLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        timesPanel = new javax.swing.JPanel();
        ninePanel = new javax.swing.JPanel();
        tenPanel = new javax.swing.JPanel();
        elevernPanel = new javax.swing.JPanel();
        twelvePanel = new javax.swing.JPanel();
        onePanel = new javax.swing.JPanel();
        twoPanel = new javax.swing.JPanel();
        threePanel = new javax.swing.JPanel();
        fourPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        selectPartner.setText("Select Partner");

        back.setText("<<");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        forward.setText(">>");
        forward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardActionPerformed(evt);
            }
        });

        dayLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        dayLabel.setText(dateFormat.format(cDisplay.getTime()));
        dayLabel.setHorizontalAlignment(SwingConstants.CENTER);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Time");

        timesPanel.setLayout(new java.awt.GridBagLayout());

        GridBagConstraints cTimes = new GridBagConstraints();
        cTimes.fill = GridBagConstraints.BOTH;
        cTimes.anchor = GridBagConstraints.WEST;
        cTimes.gridx = 0;
        cTimes.weightx = 1;
        int startTime = 0;
        for (int i=1; i<13; i+=2) {
            cTimes.gridy = i;
            cTimes.weighty = (100.0/60)*1;
            timesPanel.add(new JLabel(":" + startTime), cTimes);
            cTimes.gridy = i+1;
            cTimes.weighty = (100.0/60)*9;
            timesPanel.add(new JPanel(), cTimes);
            startTime += 10;
        }

        javax.swing.GroupLayout timesPanelLayout = new javax.swing.GroupLayout(timesPanel);
        timesPanel.setLayout(timesPanelLayout);
        timesPanelLayout.setHorizontalGroup(
            timesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 75, Short.MAX_VALUE)
        );
        timesPanelLayout.setVerticalGroup(
            timesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        ninePanel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(0, 0, 0)));
        ninePanel.setPreferredSize(new java.awt.Dimension(116, 514));
        ninePanel.setLayout(new java.awt.GridBagLayout());

        tenPanel.setLayout(new java.awt.GridBagLayout());

        javax.swing.GroupLayout tenPanelLayout = new javax.swing.GroupLayout(tenPanel);
        tenPanel.setLayout(tenPanelLayout);
        tenPanelLayout.setHorizontalGroup(
            tenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 116, Short.MAX_VALUE)
        );
        tenPanelLayout.setVerticalGroup(
            tenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        elevernPanel.setLayout(new java.awt.GridBagLayout());
        elevernPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout elevernPanelLayout = new javax.swing.GroupLayout(elevernPanel);
        elevernPanel.setLayout(elevernPanelLayout);
        elevernPanelLayout.setHorizontalGroup(
            elevernPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 116, Short.MAX_VALUE)
        );
        elevernPanelLayout.setVerticalGroup(
            elevernPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        twelvePanel.setPreferredSize(new java.awt.Dimension(116, 0));
        twelvePanel.setLayout(new java.awt.GridBagLayout());

        onePanel.setLayout(new java.awt.GridBagLayout());
        onePanel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout onePanelLayout = new javax.swing.GroupLayout(onePanel);
        onePanel.setLayout(onePanelLayout);
        onePanelLayout.setHorizontalGroup(
            onePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 116, Short.MAX_VALUE)
        );
        onePanelLayout.setVerticalGroup(
            onePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        twoPanel.setLayout(new java.awt.GridBagLayout());

        javax.swing.GroupLayout twoPanelLayout = new javax.swing.GroupLayout(twoPanel);
        twoPanel.setLayout(twoPanelLayout);
        twoPanelLayout.setHorizontalGroup(
            twoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 116, Short.MAX_VALUE)
        );
        twoPanelLayout.setVerticalGroup(
            twoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        threePanel.setLayout(new java.awt.GridBagLayout());
        threePanel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout threePanelLayout = new javax.swing.GroupLayout(threePanel);
        threePanel.setLayout(threePanelLayout);
        threePanelLayout.setHorizontalGroup(
            threePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 116, Short.MAX_VALUE)
        );
        threePanelLayout.setVerticalGroup(
            threePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        fourPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 1, new java.awt.Color(0, 0, 0)));
        fourPanel.setPreferredSize(new java.awt.Dimension(116, 0));
        fourPanel.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("9:00");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("10:00");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("11:00");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("12:00");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("13:00");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("14:00");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("15:00");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("16:00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selectPartner)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(back)
                        .addGap(309, 309, 309)
                        .addComponent(dayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(forward))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ninePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(88, 88, 88)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(tenPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(elevernPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(82, 82, 82)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(twelvePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(80, 80, 80)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(onePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(82, 82, 82)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(twoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(80, 80, 80)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(threePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(0, 73, Short.MAX_VALUE))
                            .addComponent(fourPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectPartner)
                    .addComponent(back)
                    .addComponent(forward)
                    .addComponent(dayLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ninePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(timesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tenPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(elevernPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(twelvePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(onePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(twoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(threePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fourPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        CalendarDayPanel next = new CalendarDayPanel(this.frame, this.timeOffset-1, this.partner);
        this.frame.setContentPane(next);
    }//GEN-LAST:event_backActionPerformed

    private void forwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardActionPerformed
        CalendarDayPanel next = new CalendarDayPanel(this.frame, this.timeOffset+1, this.partner);
        this.frame.setContentPane(next);
    }//GEN-LAST:event_forwardActionPerformed

    private void viewAppointmentActionPerformed(java.awt.event.ActionEvent evt) {
        setVisible(false);
        Appointment a = (Appointment)((JButton)evt.getSource()).getClientProperty("appointment");
        // To add partner view appointment panel here
        //frame.setContentPane(view);
    }
    
    private JButton createViewButton(Patient patient, Appointment a) {
        JButton view = new JButton();
        view.setText(patient.getFirstName() + " " + patient.getSurname());
        view.setPreferredSize(new Dimension(1,1));
        view.putClientProperty("appointment", a);
        view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAppointmentActionPerformed(evt);
            }
        });
        return view;
    }
    
    private JButton createBlankButton() {
        JButton blank = new JButton();
        blank.setPreferredSize(new Dimension(1,1));
        blank.setEnabled(false);
        blank.setOpaque(false);
        blank.setContentAreaFilled(false);
        blank.setBorderPainted(false);
        return blank;
    }
    /*
    
    Change so that each panel only deals with itself and returns an appointment if the endTime of the appointment would overlap so it can
    be delt with by the panel who needs it (means removing panel next and adding panelSart to params).
    
    private boolean showAppointments(Appointment[] appointments, JPanel panel, JPanel panelNext, java.sql.Time panelEnd) {
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.fill = GridBagConstraints.BOTH;
        gbc.weightx = 1;
        gbc.gridx = 0;
        if (appointments.length != 0) {
            int gridI = 1;
            for (int i=0; i<appointments.length; i++) {
                int lengthI = (int)(appointments[i].getEndTime().getTime() - appointments[i].getStartTime().getTime());
                if (((appointments[i].getStartTime().getTime())/1000/60)%60 == 0 && lengthI < 60) {
                    JButton viewAppoint = createViewButton(appointments[i].getPatient(), appointments[i]);
                    gbc.weighty = (100.0/60.0)*lengthI;
                    gbc.gridy = gridI;
                    panel.add(viewAppoint, gbc);
                    gridI++;
                    if (i == appointments.length-1) {
                        JButton blank = createBlankButton();
                        gbc.weighty = (100.0/60.0)*(60-lengthI);
                        gbc.gridy = gridI;
                        panel.add(blank, gbc);
                        gridI++;
                    }
                } else if (lengthI < 60){
                    if ((appointments[i].getEndTime().getTime()/1000/60) - (panelEnd.getTime()/1000/60) > 60) return true;
                } else if (lengthI >= 60) {
                    JButton viewAppoint = createViewButton(appointments[i].getPatient(), appointments[i]);
                    gbc.weighty = 1;
                    gbc.gridy = gridI;
                    panel.add(viewAppoint, gbc);
                    gridI++;
                    if (appointments[i].getEndTime().getTime() > panelEnd.getTime()) {
                        JButton viewAppointNext = createViewButton(appointments[i].getPatient(), appointments[i]);
                        gbc.weighty = (100.0*60.0)*((appointments[i].getEndTime().getTime()/1000/60) - (panelEnd.getTime()/1000/60));
                        gbc.gridy = 0;
                        panel.add(viewAppoint, gbc);
                    }
                    if (lengthI > 120) return true;
                }
            }
        }
        return false;
    }
*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JLabel dayLabel;
    private javax.swing.JPanel elevernPanel;
    private javax.swing.JButton forward;
    private javax.swing.JPanel fourPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel ninePanel;
    private javax.swing.JPanel onePanel;
    private javax.swing.JButton selectPartner;
    private javax.swing.JPanel tenPanel;
    private javax.swing.JPanel threePanel;
    private javax.swing.JPanel timesPanel;
    private javax.swing.JPanel twelvePanel;
    private javax.swing.JPanel twoPanel;
    // End of variables declaration//GEN-END:variables
}
